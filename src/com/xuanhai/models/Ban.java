package com.xuanhai.models;
// Generated Oct 11, 2016 5:24:08 PM by Hibernate Tools 4.3.1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import org.hibernate.annotations.Type;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.FetchType;
import javax.persistence.OneToMany;
import javax.persistence.Temporal;
import org.hibernate.annotations.Generated;
import static org.hibernate.annotations.GenerationTime.ALWAYS;

/**
 * Ban generated by hbm2java
 */
@Entity
@Table(name = "ban", catalog = "coffee_shop")
public class Ban implements java.io.Serializable {

    private int banId;
    private String soBan;
    private boolean conTrong;

    private Date createDate;
    private Date updateDate;

    private Set<DatBan> datBans = new HashSet<>();

    public Ban() {
    }

    public Ban(String soBan, boolean conTrong) {
        this.soBan = soBan;
        this.conTrong = conTrong;
        this.createDate = new Date();
        this.updateDate = new Date();

    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ban_id", unique = true, nullable = false)
    public int getBanId() {
        return this.banId;
    }

    public void setBanId(int banId) {
        this.banId = banId;
    }

    @Column(name = "so_ban", unique = true, nullable = false)
    public String getSoBan() {
        return this.soBan;
    }

    public void setSoBan(String soBan) {
        this.soBan = soBan;
    }

    @Column(name = "con_trong", unique = false, nullable = false)
    @Type(type = "yes_no")
    public boolean getConTrong() {
        return this.conTrong;
    }

    public void setConTrong(boolean trangThai) {
        this.conTrong = trangThai;
    }

    @Override
    public String toString() {
        if (conTrong) {
            return soBan + " (còn trống)";
        } else {
            return soBan;
        }
    }

    @OneToMany(cascade = CascadeType.REMOVE, fetch = FetchType.LAZY, mappedBy = "ban")
    public Set<DatBan> getDatBans() {
        return datBans;
    }

    public void setDatBans(Set<DatBan> datBans) {
        this.datBans = datBans;
    }

    @Column(name = "create_date")
    @Temporal(javax.persistence.TemporalType.TIMESTAMP)
    public Date getCreateDate() {
        return this.createDate;
    }

    public void setCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    @Column(name = "update_date")
    @Temporal(javax.persistence.TemporalType.TIMESTAMP)
    public Date getUpdateDate() {
        return this.updateDate;
    }

    public void setUpdateDate(Date updateDate) {
        this.updateDate = updateDate;
    }

}
